#!/usr/bin/env php
<?php
/**************************************************************************
Copyright 2017 Benato Denis

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*****************************************************************************/

define('CLI_TOOLKIT', true);

global $argv;
global $argc;

//include the base application and perform basic operations
if (file_exists(__DIR__.'/../../autoload.php'))
    require __DIR__.'/../../autoload.php';
else
    if (file_exists(__DIR__.'/vendor/autoload.php'))
        require __DIR__.'/vendor/autoload.php';
    else
        die("You have to run 'composer install --no-dev' to complete the installation!\n");


use Gishiki\Gishiki;
use Gishiki\Core\Environment;
use Gishiki\CLI\Console;
use Gishiki\CLI\ConsoleColor;

Gishiki::initialize();

if ($argc > 1) {
    switch ($argv[1]) {
        case 'new':
            $bootstrap = new \Gishiki\CLI\Utils\Bootstrapper();
            
            if ($argc > 2) {
                if (strcmp($argv[2], "application") == 0) {
                    try {
                        $bootstrap->application();
                        Console::setForegroundColor(ConsoleColor::TEXT_GREEN);
                        Console::setBackgroundColor(ConsoleColor::BACKGROUND_WHITE);
                        Console::writeLine("The new application has been created");
                    } catch (\Exception $ex) {
                        Console::setForegroundColor(ConsoleColor::TEXT_RED);
                        Console::setBackgroundColor(ConsoleColor::BACKGROUND_WHITE);
                        Console::writeLine($ex->getMessage());
                    }
                } elseif (strcmp($argv[2], "controller") == 0) {
                    if (($argc > 3) && (Environment::applicationExists())) {
                        try {
                            $bootstrap->controller($argv[3]);
                            Console::setForegroundColor(ConsoleColor::TEXT_GREEN);
                            Console::setBackgroundColor(ConsoleColor::BACKGROUND_WHITE);
                            Console::writeLine("The new controller has been created, remember to run 'composer update --no-dev' when you're done adding controllers");
                        } catch (\Exception $ex) {
                            Console::setForegroundColor(ConsoleColor::TEXT_RED);
                            Console::setBackgroundColor(ConsoleColor::BACKGROUND_WHITE);
                            Console::writeLine($ex->getMessage());
                        }
                    } elseif ($argc <= 3) {
                        Console::setForegroundColor(ConsoleColor::TEXT_RED);
                        Console::setBackgroundColor(ConsoleColor::BACKGROUND_WHITE);
                        Console::writeLine("Missing controller name");
                    } else {
                        Console::setForegroundColor(ConsoleColor::TEXT_RED);
                        Console::setBackgroundColor(ConsoleColor::BACKGROUND_WHITE);
                        Console::writeLine("You have to create an application before creating a controller");
                    }
                } else {
                    Console::setForegroundColor(ConsoleColor::TEXT_RED);
                    Console::setBackgroundColor(ConsoleColor::BACKGROUND_WHITE);
                    Console::writeLine("Invalid parameter after new");
                }
            } else {
                Console::setForegroundColor(ConsoleColor::TEXT_RED);
                Console::setBackgroundColor(ConsoleColor::BACKGROUND_WHITE);
                Console::writeLine("New what?");
            }
            
            break;
            
        case 'help':
            Console::writeLine("The following is a list of arguments that can be passed to the gishiki CLI");
            Console::writeLine("");
            Console::writeLine("new application: generate an empty application");
            Console::writeLine("new controller <name>: generate an empty controller with the given name");
            break;
            
        default:
            Console::setForegroundColor(ConsoleColor::TEXT_RED);
            Console::setBackgroundColor(ConsoleColor::BACKGROUND_WHITE);
            Console::writeLine("Invalid command: use gishiki help for a list of available commands");
            break;
    }
} else {
    Console::setForegroundColor(ConsoleColor::TEXT_BLUE);
    Console::setBackgroundColor(ConsoleColor::BACKGROUND_WHITE);
    Console::writeLine("use gishiki help for a list of available commands");
}